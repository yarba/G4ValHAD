

# Project in Gitlab:

https://gitlab.cern.ch/GeantValidation

# On tev.fnal.gov:

cd /lfstev/g4p/yarba_j
mkdir geant-val
cd geant-val
mkdir GeantValidation
cd GeantValidation
git clone ssh://git@gitlab.cern.ch:7999/GeantValidation/geant-config-generator.git

# Similar can be done on lxplus:


cd scratch0 (full path: /afs/cern.ch/user/y/yarba/scratch0)
mkdir geant-val
cd geant-val
mkdir GeantValidation
cd GeantValidation

# At this point one may want to do a couple of manupulations, like publickey, etc.
# (see here: https://gitlab.cern.ch/geant4/geant4-dev/blob/master/CONTRIBUTING.rst) 
# before being able to run the following:
git clone ssh://git@gitlab.cern.ch:7999/GeantValidation/geant-config-generator.git

# About "central" installs of Geant4 on lxplus.cern.ch
#
# CVMFS disk space /cvmfs/geant4.cern.ch/geant4 hosts a number of Geant4 builds up to 10.6.cand01
#
# Setup script(s) are pf the like /cvmfs/geant4.cern.ch/geant4/$VERSION/$PLATFORM/bin/geant4.sh
# (most likely, autogenerated by cmake)
#
# External datasets (most up to date) are located in /cvmfs/geant4.cern.ch/share/data
#
# Validation apps (most up to date) are hosted in /cvmfs/geant4.cern.ch/opt/$VERSION/$PLATFORM/bin
#
# Various tools (compilers, etc.) can be found in /cvmfs/sft.cern.ch/lcg/external 
#
# Example usage:
# source /cvmfs/sft.cern.ch/lcg/external/gcc/6.2/x86_64-centos7/setup.sh

# EOS space on lxplus
#
# Personal
#
ls -alF /eos/user/y/yarba
#
# There's also "projet" area, e.g. Geant4's one:
#
ls -alF /eos/project/g/geant4
#
# Interesting observation:
#
# There's a number of (presumeably) validation results here:
# /eos/project/g/geant4/www/verification/electromagnetic/
# Q: is it anyhow connected with eos/geant4/data/geant-val/raw or eos/geant4/data/geant-val/json ???

# General Q-1: where do people normally dispatch output of Geant4 jobs ?
# General Q-2: how do people normally transfer things to EOS ?

# At FNAL
#

source  /cvmfs/larsoft.opensciencegrid.org/products/setup
setup root v6_12_06a -q e17:prof

# After getting geant-val (geant-config-generator) from GitLab,
# one needs to extend PYTHONPATH:
#
cd /path/to/geant-config-generator
export PYTHONPATH=$PWD:$PYTHONPATH

# Example of creating **infrastructure** for submitting tests
# (no actual submission though, i.e. no -r input arg)
# Later on this kind of infrastructure is browsed by parser, 
# looking job metadata/config in JSON format
# NOTE: there should exist configs/geant4/10.5.ref10.sh (or similar)
#       otherwise the system will say that it knows nothing about release 
#
./mc-config-generator.py submit -t geant4/test22_HARP -d OUTPUT -v 10.5.ref10  

# Example of parsing
#
./mc-config-generator.py parse -d $PWD/fake-results -t geant4/test19
 
