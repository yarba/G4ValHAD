

# Project in Gitlab:

https://gitlab.cern.ch/GeantValidation

# On tev.fnal.gov:

cd /lfstev/g4p/yarba_j
mkdir geant-val
cd geant-val
mkdir GeantValidation
cd GeantValidation
git clone ssh://git@gitlab.cern.ch:7999/GeantValidation/geant-config-generator.git

# Similar can be done on lxplus:


cd scratch0 (full path: /afs/cern.ch/user/y/yarba/scratch0)
mkdir geant-val
cd geant-val
mkdir GeantValidation
cd GeantValidation

# At this point one may want to do a couple of manupulations, like publickey, etc.
# (see here: https://gitlab.cern.ch/geant4/geant4-dev/blob/master/CONTRIBUTING.rst) 
# before being able to run the following:
git clone ssh://git@gitlab.cern.ch:7999/GeantValidation/geant-config-generator.git

# About "central" installs of Geant4 on lxplus.cern.ch
#
# CVMFS disk space /cvmfs/geant4.cern.ch/geant4 hosts a number of Geant4 builds up to 10.6.cand01
#
# Setup script(s) are pf the like /cvmfs/geant4.cern.ch/geant4/$VERSION/$PLATFORM/bin/geant4.sh
# (most likely, autogenerated by cmake)
#
# External datasets (most up to date) are located in /cvmfs/geant4.cern.ch/share/data
#
# Validation apps (most up to date) are hosted in /cvmfs/geant4.cern.ch/opt/$VERSION/$PLATFORM/bin
#
# Various tools (compilers, etc.) can be found in /cvmfs/sft.cern.ch/lcg/external 
#
# Example usage:
# source /cvmfs/sft.cern.ch/lcg/external/gcc/6.2/x86_64-centos7/setup.sh

# EOS space on lxplus
#
# Personal
#
ls -alF /eos/user/y/yarba
#
# There's also "projet" area, e.g. Geant4's one:
#
ls -alF /eos/project/g/geant4
#
# Interesting observation:
#
# There's a number of (presumeably) validation results here:
# /eos/project/g/geant4/www/verification/electromagnetic/
# Q: is it anyhow connected with eos/geant4/data/geant-val/raw or eos/geant4/data/geant-val/json ???

# General Q-1: where do people normally dispatch output of Geant4 jobs ?
# General Q-2: how do people normally transfer things to EOS ?

# At FNAL
#

source  /cvmfs/larsoft.opensciencegrid.org/products/setup
setup root v6_12_06a -q e17:prof

# After getting geant-val (geant-config-generator) from GitLab,
# one needs to extend PYTHONPATH:
#
cd /path/to/geant-config-generator
export PYTHONPATH=$PWD:$PYTHONPATH

# Example of creating **infrastructure** for submitting tests
# (no actual submission though, i.e. no -r input arg)
# Later on this kind of infrastructure is browsed by parser, 
# looking job metadata/config in JSON format
# NOTE: there should exist configs/geant4/10.5.ref10.sh (or similar)
#       otherwise the system will say that it knows nothing about release; 
#       also should be there (in GitLab or manually copied over) the testNN
# NOTE: the hierarchy under OUTPUT dir will be quite deep, i.e.
#       OUTPUT/geant4/11.1/x86_64-centos7-gcc9-optdeb/<test-name>/<spec>
#       here "spec" is generated by the geant-val tools/scripts and is likely
#       to be something fairly generic, e.g. 9f6ee38aca2f59fcca66231c060e5736  
#
./mc-config-generator.py submit -t geant4/test22_HARP -d OUTPUT -v 10.5.ref10
OR (as of 3/22/23)
./mc-config-generator.py submit -t test19 -d OUTPUT -v 11.1  

# Example of parsing
# NOTE: one might need to replicate emulate_results the same hierarchy 
#       as the one under OUTPUT before placing there the histos
#       although it'd be interesting to check if things work with a simpler hierarchy...
# NOTE: the resulting JSON files will be PER HISTOGRAM, and will bear fairly generic names
#       the output will appears as OUTPUTJSON/geant4/11.1/x86_64-centos7-gcc9-optdeb/<test>/<spec>
#
./mc-config-generator.py parse -d $PWD/emulate_results -t geant4/test19

# NOTES on building vs packages installed at CERN (cvmfs)
#
# NOTE: in order to make it work in WC-IC one needs to stick to centos7 !!!
#

# setup gcc
#
source /cvmfs/sft.cern.ch/lcg/contrib/gcc/9/x86_64-centos7/setup.sh
#
# setup ROOT
#
# NOTE: one can look in /cvmfs/sft.cern.ch/lcg/releases/LCG_XX/ROOT
#       but e.g. under LCG_99/ROOT there's nothing for centos7+gcc9
#       although centos7+gcc10 is available
#       under LCG_101/ROOT one can find centos7+gcc11 as well
#       LCG_103 will NOT have anything below gcc11, incl. for centos7
#       etc.
#       one can also look for Python in such area(s)
#       e.g. LCG_103 will offer Python 3.9.12
#
# NOTE: but since on WC-IC we have to stick to centos7, let's try
#        /cvmfs/sft.cern.ch/lcg/releases/LCG_98/ROOT/v6.22.00/x86_64-centos7-gcc9-opt
#
# source /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6-24-00-patches-1670e/x86_64-centos7-gcc9-opt/bin/thisroot.sh
# 
# perhaps this one will do altogether
#
# source  /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos8-gcc11-opt/bin/thisroot.sh
source /cvmfs/sft.cern.ch/lcg/releases/LCG_98/ROOT/v6.22.00/x86_64-centos7-gcc9-opt/bin/thisroot.sh

# setup cmake
#
# NOTE: there's something here:
#       /cvmfs/sft.cern.ch/lcg/releases/CMake/3.25.1-5b4f4/x86_64-centos7-gcc9-opt/bin
#       but how to set it up properly ???
#       ... or there's something e.g. here:
#       /cvmfs/sft.cern.ch/lcg/contrib/CMake/3.23.2/Linux-x86_64
#       but again, how to set it up ???
#
# NOTE: maybe for now we'll stick to loading cmake module on WC-IC
#       while on lxplus we can probably use cmake3(.17.x) from the system    
# --> WC-IC
module load cmake/3.23.0       

# setup Geant4
#
VERSION="11.1"
PLATFORM="x86_64-centos7-gcc9-optdeb"
source /cvmfs/geant4.cern.ch/geant4/$VERSION/${PLATFORM}/bin/geant4.sh

export G4INSTALL=/cvmfs/geant4.cern.ch/geant4/11.1/x86_64-centos7-gcc9-optdeb
export G4LIB=/cvmfs/geant4.cern.ch/geant4/11.1/x86_64-centos7-gcc9-optdeb/lib64

# G4HAD Val apps
# NOTE: similar apps do exist inder geant4-dev/tests
#
# ---> read-write access --> git clone git@github.com:yarba/G4ValHAD.git
# --> read-only access
git clone https://github.com/yarba/G4ValHAD.git

cd G4ValHAD
mkdir test19-build-vs-cern
cd test19-build-vs-cern
cmake -DCMAKE_PREFIX_PATH=$G4INSTALL -DROOT_DIR=$ROOTSYS/cmake -DCMAKE_CXX_COMPILER=g++ ../test19
make
./test19 test19.na61

export PATH=$PWD:PATH





